% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extractFromLayer.R
\name{extractFromLayer}
\alias{extractFromLayer}
\alias{extractFromLayer-methods}
\alias{extractFromLayer,matrix-method}
\alias{extractFromLayer,data.frame-method}
\alias{extractFromLayer,list-method}
\alias{extractFromLayer,gGraph-method}
\alias{extractFromLayer,gData-method}
\title{Retrieves node attributes from a layer}
\usage{
extractFromLayer(x, ...)

\S4method{extractFromLayer}{matrix}(x, layer = "world", attr = "all", ...)

\S4method{extractFromLayer}{data.frame}(x, layer = "world", attr = "all", ...)

\S4method{extractFromLayer}{list}(x, layer = "world", attr = "all", ...)

\S4method{extractFromLayer}{gGraph}(x, layer = "world", attr = "all", ...)

\S4method{extractFromLayer}{gData}(x, layer = "world", attr = "all", ...)
}
\arguments{
\item{x}{a matrix, a data.frame, a list, a valid \linkS4class{gGraph}, or a
valid \linkS4class{gData} object. For matrix and data.frame, input must have
two columns giving longitudes and latitudes of locations being considered.
For list, input must have two components being vectors giving longitudes and
latitudes of locations.}

\item{\dots}{further arguments to be passed to other methds. Currently not
used.}

\item{layer}{a shapefile of the class \code{\link{sf}} (see
\code{\link[sf:st_read]{sf::st_read()}} to import a GIS
shapefile). Alternatively, a character string indicating one shapefile
released with geoGraph; currently, only 'world' is available.}

\item{attr}{a character vector giving names of the variables to be extracted
from the layer. If 'all', all available variables are extracted. In case of
problem, available names are displayed with the error message.}
}
\value{
The output depends on the nature of the input:\cr - \code{matrix,
data.frame, list}: a data.frame with one row per location, and as many
columns as requested variables ('attributes').\cr
\itemize{
\item \code{gGraph}: a \linkS4class{gGraph} object with new node attributes
(\code{@nodes.attr} slot). If nodes attributes already existed, new
attributes are added as new columns.\cr
\item \code{gData}: a \linkS4class{gData} object with new data associated to
locations (\code{@data} slot). New information is merge to older information
according to the type of data being stored. \cr
}
}
\description{
The generic function \code{extractFromLayer} uses information from a GIS
shapefile to define node attributes. For each node, information is retrieved
from the layer and assigned to that node.\cr
}
\details{
Nodes can be specified in different ways, including by providing a
\linkS4class{gGraph} or a \linkS4class{gData} object. Outputs match the
input formats.
}
\examples{
\dontrun{

plot(worldgraph.10k, reset = TRUE)

## retrieve continent info for all nodes
## (might take a few seconds)
x <- extractFromLayer(worldgraph.10k, layer = "world", attr = "continent")
x
table(getNodesAttr(x, attr.name = "continent"))


## subset Africa
temp <- getNodesAttr(x, attr.name = "continent") == "Africa"
temp[is.na(temp)] <- FALSE
x <- x[temp]
plot(x, reset = TRUE)
}

}
\seealso{
\code{\link{findLand}}, to find which locations are on land.
}
\keyword{methods}
\keyword{utilities}
