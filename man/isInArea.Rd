\encoding{UTF-8}
\name{isInArea}
\alias{isInArea}
\alias{isInArea-methods}
\alias{isInArea,matrix-method}
\alias{isInArea,data.frame-method}
\alias{isInArea,gGraph-method}
\alias{isInArea,gData-method}
\title{Find which nodes fall in a given area}
\description{
  The generic function \code{isInArea} finds which nodes fall in a given
  area. Nodes can be specified in different ways, including by providing
  a \linkS4class{gGraph} or a \linkS4class{gData} object. Different
  format for the output are also available.
}
\usage{
isInArea(x, \dots)
\S4method{isInArea}{matrix}(x, reg="current", res.type=c("logical","integer","character"), buffer=0)
\S4method{isInArea}{data.frame}(x, reg="current", res.type=c("logical","integer","character"), buffer=0)
\S4method{isInArea}{gGraph}(x, reg="current", res.type=c("logical","integer","character"), buffer=0)
\S4method{isInArea}{gData}(x, reg="current", res.type=c("logical","integer","character"), buffer=0)
}
\arguments{
  \item{x}{a matrix, a data.frame, a valid \linkS4class{gGraph},
    or a valid \linkS4class{gData} object. For matrix and data.frame,
    input must have two columns giving longitudes and latitudes of
    locations being considered.}
  \item{\dots}{further arguments passed to specific methods.}
  \item{reg}{a character string or a list indicating the area
    ('reg' stands for 'region'). Character strings can be "current"
    (current user window, default) or "zoom" (current zoom). If the
    argument is a list, is has to have two components, both being
    numeric vectors of length two, giving x and y limits of the
    area. Note that such list can be produced by \code{locator}, so
    \code{locator(1)} is a valid value for \code{reg}.}
  \item{res.type}{a character string indicating what kind of
    output should be produced. See value.}
  \item{buffer}{a numeric value giving a buffer adding extra
    space aroung the area, as a proportion of current area's dimensions.}
}
\value{
  The output depends on the value of the argument \code{res.type}:\cr
  - \code{logical}: a vector of logicals having one value for each node
  of the input.\cr

  - \code{integer}: a vector of integers corresponding to the indices of
  nodes falling within the area.\cr

  - \code{character}: a vector of characters corresponding to the names
  of the nodes falling within the area.\cr
}
\author{Thibaut Jombart (\email{t.jombart@imperial.ac.uk})}
\examples{
data(worldgraph.10k)
plot(worldgraph.10k, reset=TRUE)

## zooming in
geo.zoomin(list(x=c(-6,38), y=c(35,73)))
title("Europe")


## different outputs of isInArea
head(isInArea(worldgraph.10k)) # logical
length(isInArea(worldgraph.10k))
sum(isInArea(worldgraph.10k))
head(which(isInArea(worldgraph.10k))) # which nodes are TRUE ?

head(isInArea(worldgraph.10k, res.type="integer")) # node indices

head(isInArea(worldgraph.10k, res.type="character")) # node names


## use isInArea to have a subset of visible nodes
x <- worldgraph.10k[isInArea(worldgraph.10k)]
plot(x, reset=TRUE)
}
\keyword{utilities}
\keyword{methods}