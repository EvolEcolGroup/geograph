% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classes.R
\docType{class}
\name{gGraph-class}
\alias{gGraph-class}
\alias{gGraph}
\alias{[,gGraph-method}
\alias{[,gGraph,ANY,ANY-method}
\alias{[,gGraph,ANY,ANY,ANY-method}
\alias{getCoords,gGraph-method}
\alias{getGraph,gGraph-method}
\alias{getNodes,gGraph-method}
\alias{initialize,gGraph-method}
\alias{dropCosts,gGraph-method}
\alias{dropCosts}
\alias{show,gGraph-method}
\alias{is.gGraph}
\alias{getGraph}
\alias{getCoords}
\alias{getNodes}
\title{Formal class "gGraph"}
\description{
The class \code{gGraph} is a formal (S4) class storing geographic data.\cr
Such data are composed of a set of geographic coordinates of vertices (or
'nodes'), and a graph describing connectivity between these vertices. Data
associated to the nodes can also be stored ('nodes attributes'), as well as
meta-information used when plotting the object, or when computing weights
associated to the edges based on nodes attributes.\cr % History associated
to a \code{gGraph} object is stored in the slot % \code{history}, as an
object of the class % \linkS4class{gGraphHistory}.\cr
}
\details{
In all slots, nodes are uniquely identified by their name (reference is
taken from the row names of \code{@coords} slot).
}
\section{Slots}{

\describe{
\item{\code{coords}}{a matrix of spatial coordinates with two
columns, being respectively longitude (from -180 to 180) and latitude.
Positive numbers are intended as 'east' and 'north', respectively.}

\item{\code{nodes.attr}}{a data.frame whose rows are nodes, and whose
columns are different variables associated to the nodes.}

\item{\code{meta}}{list, most likely containing named data.frames (see
Slots).}

\item{\code{graph}}{an object of the class \linkS4class{graphNEL},
from the \code{graph} package (see \code{class?graphNEL}), describing
connectivity among nodes.

Note that none of these is mandatory: \code{new("gGraph")} would work, and
create an empty \code{gGraph} object.}
}}

\section{Objects from the class gGraph}{
 \code{gGraph} objects can be created
by calls to \code{new("gGraph", ...)}, where '...' can be the following
arguments:
}

\examples{

## create an empty object
new("gGraph")


## plotting the object
plot(rawgraph.10k, reset=TRUE)

## zooming in
geo.zoomin(list(x=c(-6,38), y=c(35,73)))
title("Europe")

## to play interactively with graphics, use:
# geo.zoomin()
# geo.zoomout()
# geo.slide()
# geo.back()

## defining a new object restrained to visible nodes
x <- rawgraph.10k[isInArea(rawgraph.10k)]
plot(x,reset=TRUE, edges=TRUE)
title("x does just contain these visible nodes.")

## define weights for edges
x <- setCosts(x, attr.name="habitat", method="prod")
plot(x,edges=TRUE)
title("costs defined by habitat (land/land=1, other=100)")

## drop 'dead edges' (i.e. with weight 0)
x <- dropDeadEdges(x, thres=10)
plot(x,edges=TRUE)
title("after droping edges with null weight")


}
\seealso{
Related classes are:\cr % - \code{\linkS4class{gGraphHistory}}:
slot \code{@history} in \code{gGraph}.\cr - \code{\linkS4class{graphNEL}}
(graph package): slot \code{@graph} in \code{gGraph}.\cr
}
\author{
Thibaut Jombart (\email{t.jombart@imperial.ac.uk})
}
\keyword{classes}
\keyword{graphs}
\keyword{spatial}
